package updatevulnerabilityanalytic

import (
	"testing"

	"github.com/google/uuid"
	"github.com/stretchr/testify/assert"

	"github.com/ZupIT/horusec-devkit/pkg/entities/update_vulnerability_analytic/enums"
	"github.com/ZupIT/horusec-devkit/pkg/entities/vulnerability"
)

func TestNewVulnerabilityToUpdate(t *testing.T) {
	t.Run("Should create instance correctly", func(t *testing.T) {
		newVuln := &vulnerability.Vulnerability{
			VulnerabilityID: uuid.New(),
		}
		oldVuln := &vulnerability.Vulnerability{
			VulnerabilityID: uuid.New(),
		}
		instance := NewVulnerabilityToUpdate(newVuln, oldVuln)
		entity := *instance
		assert.Equal(t, newVuln.VulnerabilityID, entity[enums.New].VulnerabilityID)
		assert.Equal(t, oldVuln.VulnerabilityID, entity[enums.Old].VulnerabilityID)
	})
	t.Run("Should parse to bytes without errors", func(t *testing.T) {
		newVuln := &vulnerability.Vulnerability{
			VulnerabilityID: uuid.New(),
		}
		oldVuln := &vulnerability.Vulnerability{
			VulnerabilityID: uuid.New(),
		}
		bytes := NewVulnerabilityToUpdate(newVuln, oldVuln).ToBytes()
		assert.NotEmpty(t, bytes)
	})
}
