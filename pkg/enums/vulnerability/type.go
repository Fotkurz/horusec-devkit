// Copyright 2020 ZUP IT SERVICOS EM TECNOLOGIA E INOVACAO SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package vulnerability

type Type string

const (
	Vulnerability Type = "Vulnerability"
	RiskAccepted  Type = "Risk Accepted"
	FalsePositive Type = "False Positive"
	Corrected     Type = "Corrected"
	Unknown       Type = "UNKNOWN"
)

func (t Type) ToString() string {
	return string(t)
}

func (t Type) IsValid() bool {
	return t != Unknown
}

func GetVulnTypeByString(severity string) Type {
	if Contains(severity) {
		return Map()[severity]
	}

	return Unknown
}

func Contains(severity string) bool {
	for _, value := range Values() {
		if value.ToString() == severity {
			return true
		}
	}

	return false
}

func Map() map[string]Type {
	return map[string]Type{
		Vulnerability.ToString(): Vulnerability,
		RiskAccepted.ToString():  RiskAccepted,
		FalsePositive.ToString(): FalsePositive,
		Corrected.ToString():     Corrected,
		Unknown.ToString():       Unknown,
	}
}

func Values() []Type {
	return []Type{
		Vulnerability,
		RiskAccepted,
		FalsePositive,
		Corrected,
		Unknown,
	}
}
